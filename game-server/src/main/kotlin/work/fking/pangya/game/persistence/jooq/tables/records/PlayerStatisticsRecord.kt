/*
 * This file is generated by jOOQ.
 */
package work.fking.pangya.game.persistence.jooq.tables.records


import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl

import work.fking.pangya.game.persistence.jooq.tables.PlayerStatistics


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PlayerStatisticsRecord private constructor() : UpdatableRecordImpl<PlayerStatisticsRecord>(PlayerStatistics.PLAYER_STATISTICS) {

    open var accountUid: Int
        set(value): Unit = set(0, value)
        get(): Int = get(0) as Int

    open var totalShots: Int
        set(value): Unit = set(1, value)
        get(): Int = get(1) as Int

    open var totalPutts: Int
        set(value): Unit = set(2, value)
        get(): Int = get(2) as Int

    open var playtimeSeconds: Int
        set(value): Unit = set(3, value)
        get(): Int = get(3) as Int

    open var shotTimeSeconds: Int
        set(value): Unit = set(4, value)
        get(): Int = get(4) as Int

    open var longestDrive: Float
        set(value): Unit = set(5, value)
        get(): Float = get(5) as Float

    open var pangyaShots: Int
        set(value): Unit = set(6, value)
        get(): Int = get(6) as Int

    open var timeouts: Int
        set(value): Unit = set(7, value)
        get(): Int = get(7) as Int

    open var oobShots: Int
        set(value): Unit = set(8, value)
        get(): Int = get(8) as Int

    open var totalDistance: Int
        set(value): Unit = set(9, value)
        get(): Int = get(9) as Int

    open var totalHoles: Int
        set(value): Unit = set(10, value)
        get(): Int = get(10) as Int

    open var unfinishedHoles: Int
        set(value): Unit = set(11, value)
        get(): Int = get(11) as Int

    open var holeInOnes: Int
        set(value): Unit = set(12, value)
        get(): Int = get(12) as Int

    open var bunkerShots: Int
        set(value): Unit = set(13, value)
        get(): Int = get(13) as Int

    open var fairwayShots: Int
        set(value): Unit = set(14, value)
        get(): Int = get(14) as Int

    open var albatross: Int
        set(value): Unit = set(15, value)
        get(): Int = get(15) as Int

    open var successfulPutts: Int
        set(value): Unit = set(16, value)
        get(): Int = get(16) as Int

    open var longestPutt: Float
        set(value): Unit = set(17, value)
        get(): Float = get(17) as Float

    open var longestChipIn: Float
        set(value): Unit = set(18, value)
        get(): Float = get(18) as Float

    open var experience: Int
        set(value): Unit = set(19, value)
        get(): Int = get(19) as Int

    open var level: Int
        set(value): Unit = set(20, value)
        get(): Int = get(20) as Int

    open var pangEarned: Long
        set(value): Unit = set(21, value)
        get(): Long = get(21) as Long

    open var totalScore: Int
        set(value): Unit = set(22, value)
        get(): Int = get(22) as Int

    open var gamesPlayed: Int
        set(value): Unit = set(23, value)
        get(): Int = get(23) as Int

    open var gameComboCurrentStreak: Int
        set(value): Unit = set(24, value)
        get(): Int = get(24) as Int

    open var gameComboBestStreak: Int
        set(value): Unit = set(25, value)
        get(): Int = get(25) as Int

    open var gamesQuit: Int
        set(value): Unit = set(26, value)
        get(): Int = get(26) as Int

    open var pangWonInBattle: Int
        set(value): Unit = set(27, value)
        get(): Int = get(27) as Int

    open var pangBattleWins: Int
        set(value): Unit = set(28, value)
        get(): Int = get(28) as Int

    open var pangBattleLosses: Int
        set(value): Unit = set(29, value)
        get(): Int = get(29) as Int

    open var pangBattleAllIns: Int
        set(value): Unit = set(30, value)
        get(): Int = get(30) as Int

    open var pangBattleCombo: Int
        set(value): Unit = set(31, value)
        get(): Int = get(31) as Int

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised PlayerStatisticsRecord
     */
    constructor(accountUid: Int, totalShots: Int, totalPutts: Int, playtimeSeconds: Int, shotTimeSeconds: Int, longestDrive: Float, pangyaShots: Int, timeouts: Int, oobShots: Int, totalDistance: Int, totalHoles: Int, unfinishedHoles: Int, holeInOnes: Int, bunkerShots: Int, fairwayShots: Int, albatross: Int, successfulPutts: Int, longestPutt: Float, longestChipIn: Float, experience: Int, level: Int, pangEarned: Long, totalScore: Int, gamesPlayed: Int, gameComboCurrentStreak: Int, gameComboBestStreak: Int, gamesQuit: Int, pangWonInBattle: Int, pangBattleWins: Int, pangBattleLosses: Int, pangBattleAllIns: Int, pangBattleCombo: Int): this() {
        this.accountUid = accountUid
        this.totalShots = totalShots
        this.totalPutts = totalPutts
        this.playtimeSeconds = playtimeSeconds
        this.shotTimeSeconds = shotTimeSeconds
        this.longestDrive = longestDrive
        this.pangyaShots = pangyaShots
        this.timeouts = timeouts
        this.oobShots = oobShots
        this.totalDistance = totalDistance
        this.totalHoles = totalHoles
        this.unfinishedHoles = unfinishedHoles
        this.holeInOnes = holeInOnes
        this.bunkerShots = bunkerShots
        this.fairwayShots = fairwayShots
        this.albatross = albatross
        this.successfulPutts = successfulPutts
        this.longestPutt = longestPutt
        this.longestChipIn = longestChipIn
        this.experience = experience
        this.level = level
        this.pangEarned = pangEarned
        this.totalScore = totalScore
        this.gamesPlayed = gamesPlayed
        this.gameComboCurrentStreak = gameComboCurrentStreak
        this.gameComboBestStreak = gameComboBestStreak
        this.gamesQuit = gamesQuit
        this.pangWonInBattle = pangWonInBattle
        this.pangBattleWins = pangBattleWins
        this.pangBattleLosses = pangBattleLosses
        this.pangBattleAllIns = pangBattleAllIns
        this.pangBattleCombo = pangBattleCombo
        resetChangedOnNotNull()
    }
}
